name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Install prerequisites
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PUBLISH_BOT_TOKEN }}
          ref: "develop"

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://npm.pkg.github.com/
          scope: "@deepcrawl"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore keys from cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_PACKAGE_READ_TOKEN }}

      - name: Build
        run: yarn build

      - name: Prettier
        run: yarn prettier:check

      - name: Lint
        run: yarn lerna run --since $BASE_BRANCH --concurrency 1 --stream lint:check

      - name: Test
        run: yarn lerna run --since $BASE_BRANCH --concurrency 1 --stream test:ci

      - name: Publish
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          ./.github/bin/github-registry-auth.sh
          yarn lerna publish --no-commit-hooks --conventional-graduate --include-merged-tags --yes
        env:
          GH_TOKEN: ${{ secrets.PUBLISH_BOT_TOKEN }}
          GIT_REGISTRY_TOKEN: ${{ secrets.PUBLISH_BOT_TOKEN }}

      - name: Build @deepcrawl/test-cli executables
        run: yarn build:executables
        working-directory: packages/test-cli

      - name: Get @deepcrawl/test-cli package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: packages/test-cli

      - name: Upload @deepcrawl/test-cli assets to release
        run: gh release upload v${{ steps.package-version.outputs.current-version }} ./dist/deepcrawl-test-linux ./dist/deepcrawl-test-macos ./dist/deepcrawl-test-win.exe
        working-directory: packages/test-cli
        env:
          GH_TOKEN: ${{ secrets.PUBLISH_BOT_TOKEN }}
